{"ast":null,"code":"import _toConsumableArray from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/gagandeep/Documents/Projects/interview-corner/src/Components/Aptitude.js\";\nimport React, { Component } from 'react';\nimport { Radio, Card, Button } from 'antd';\nimport { questions } from '../Data/aptitude';\nimport _ from 'lodash';\nvar RadioGroup = Radio.Group;\nvar questionChoices = questions;\n\nvar Quiz =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Quiz, _Component);\n\n  function Quiz() {\n    var _this;\n\n    _classCallCheck(this, Quiz);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Quiz).call(this));\n\n    _this.handleSubmit = function () {\n      console.log(_this.state.answers);\n    };\n\n    _this.onInput = function (e) {\n      var id = e.target.name;\n      var givenAns = e.target.value;\n      console.log(e.target.value);\n      var answer = {\n        id: id,\n        answer: e.target.value\n      };\n      var answers;\n\n      if (_this.state.answers.some(function (answer) {\n        return answer.id === id;\n      })) {\n        answers = _toConsumableArray(_this.state.answers.filter(function (answer) {\n          return answer.id !== id;\n        })).concat([answer]);\n      } else {\n        answers = _toConsumableArray(_this.state.answers).concat([answer]);\n      }\n\n      _this.setState({\n        answers: answers\n      }, function () {\n        return console.log(_this.state.answers);\n      });\n    };\n\n    _this.state = {\n      answers: [],\n      givenAns: []\n    };\n    _this.onInput = _this.onInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.buildRadioButtons = _this.buildRadioButtons.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Quiz, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var givenAns = _.range(3).map(function () {\n        return -1;\n      });\n\n      this.setState({\n        givenAns: givenAns\n      });\n    }\n  }, {\n    key: \"buildRadioButtons\",\n    value: function buildRadioButtons(arr, type, id) {\n      var _this2 = this;\n\n      return arr.map(function (choice, i) {\n        return React.createElement(\"div\", {\n          key: i,\n          value: choice,\n          className: \"righter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"radio\",\n          className: \"custom-control-input\",\n          name: id,\n          id: choice,\n          value: choice,\n          onChange: _this2.onInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          for: choice,\n          onChange: _this2.onInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, choice));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var iterator = questionChoices.map(function (question, i) {\n        var choices = question.choices,\n            questionType = question.questionType,\n            questionID = question.questionID,\n            questionText = question.questionText;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, questionID, \". \", questionText), _this3.buildRadioButtons(choices, questionType, questionID))), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form alignLeft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, iterator)), React.createElement(Button, {\n        type: \"primary\",\n        size: \"large\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Submit Test\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Quiz;\n}(Component);\n\nexport default Quiz;","map":{"version":3,"sources":["/home/gagandeep/Documents/Projects/interview-corner/src/Components/Aptitude.js"],"names":["React","Component","Radio","Card","Button","questions","_","RadioGroup","Group","questionChoices","Quiz","handleSubmit","console","log","state","answers","onInput","e","id","target","name","givenAns","value","answer","some","filter","setState","bind","buildRadioButtons","range","map","arr","type","choice","i","iterator","question","choices","questionType","questionID","questionText"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Radio, Card, Button } from 'antd';\nimport  { questions } from '../Data/aptitude';\nimport _ from 'lodash';\n\nconst RadioGroup = Radio.Group;\n\nconst questionChoices = questions;\n\nclass Quiz extends Component {\n\tconstructor() {\n    super();\n    this.state = { answers: [], givenAns: [] };\n    this.onInput = this.onInput.bind(this);\n    this.buildRadioButtons = this.buildRadioButtons.bind(this);\n  }\n\n  componentWillMount() {\n    const givenAns = _.range(3).map(function () { return -1 })\n    this.setState({ givenAns: givenAns })\n  }\n\n  handleSubmit = () => {\n    console.log(this.state.answers);\n  }\n\n  onInput = (e) => {\n    const id = e.target.name;\n    const givenAns = e.target.value;\n    console.log(e.target.value);\n    const answer = { id, answer: e.target.value };\n    let answers;\n    if (this.state.answers.some(answer => answer.id === id)) {\n      answers = [...this.state.answers.filter(answer => answer.id !== id), answer];\n    } else {\n      answers = [...this.state.answers, answer];\n    }\n    this.setState({ answers }, () => console.log(this.state.answers));\n  }\n\n  buildRadioButtons(arr, type, id) {\n    return arr.map((choice, i) => {\n      return (\n        <div key={i} value={choice} className = \"righter\">\n          <input\n          type=\"radio\"\n          className=\"custom-control-input\"\n          name={id}\n          id={choice}\n          value={choice}\n          onChange={this.onInput}\n        />        \n        <label for = {choice} onChange={this.onInput}>{choice}</label>\n      </div>\n     )\n  })\n }\n\n  render() {\n    var iterator = questionChoices.map((question, i) => {\n      const { choices, questionType, questionID, questionText } = question;\n      return (\n      \t<div>\n      \t\t<Card>\n\t        \t<div key={i}>\n\t          \t<h3>{questionID}. {questionText}</h3>\n\t          \t{this.buildRadioButtons(choices, questionType, questionID)}\n\t        \t</div>\n\t        </Card>\n\t        <br/>\n\t    </div>    \n      );\n    });\n    return (\n        <div>\n          <div className=\"form alignLeft\">\n            <div className=\"h3\">\n              {iterator}\n            </div>\n          </div>\n          <Button type=\"primary\" size=\"large\" onClick = {this.handleSubmit}>Submit Test</Button> <br/> <br/>\n        </div>\n    );\n  }\n}\n\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}