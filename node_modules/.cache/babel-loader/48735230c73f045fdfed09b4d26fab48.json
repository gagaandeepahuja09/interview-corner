{"ast":null,"code":"import _classCallCheck from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gagandeep/Documents/Projects/interview-corner/src/Components/UnivInterviews.js\";\nimport React, { Component } from 'react';\nimport { Route, NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport queryString from 'query-string';\nimport { List } from 'antd';\nvar interviews = null;\nvar filteredInterviews = null;\n\nvar Interviews =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Interviews, _Component);\n\n  function Interviews() {\n    _classCallCheck(this, Interviews);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Interviews).apply(this, arguments));\n  }\n\n  _createClass(Interviews, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      axios.get('https://interview-corner-1de29.firebaseio.com/updated-interviews.json').then(function (response) {\n        return interviews = response.data;\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      axios.get('https://interview-corner-1de29.firebaseio.com/updated-interviews.json').then(function (response) {\n        return interviews = response.data;\n      });\n      console.log(this.props.location.search);\n      var values = queryString.parse(this.props.location.search);\n      var selectedCollege = values.college;\n      console.log('selectedCollege', selectedCollege);\n\n      if (interviews) {\n        filteredInterviews = Object.values(interviews).filter(function (interview) {\n          return interview.college === selectedCollege;\n        });\n        console.log(filteredInterviews);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = null;\n\n      if (interviews) {\n        data = Object.values(interviews).map(function (interview) {\n          return React.createElement(List.Item, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, \"interview.name + \\\" : \\\" + interview.college\");\n        });\n        console.log(interviews);\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          margin: '16px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, selectedCollege), React.createElement(List, {\n        size: \"large\",\n        bordered: true,\n        dataSource: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Interviews;\n}(Component);\n\nexport default Interviews;","map":{"version":3,"sources":["/home/gagandeep/Documents/Projects/interview-corner/src/Components/UnivInterviews.js"],"names":["React","Component","Route","NavLink","axios","queryString","List","interviews","filteredInterviews","Interviews","get","then","response","data","console","log","props","location","search","values","parse","selectedCollege","college","Object","filter","interview","map","margin"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,OAAhB,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,IAAT,QAAqB,MAArB;AAEA,IAAIC,UAAU,GAAG,IAAjB;AACA,IAAKC,kBAAkB,GAAG,IAA1B;;IAEMC,U;;;;;;;;;;;;;yCAEgB;AACpBL,MAAAA,KAAK,CAACM,GAAN,CAAU,uEAAV,EACAC,IADA,CACK,UAAAC,QAAQ;AAAA,eACZL,UAAU,GAAGK,QAAQ,CAACC,IADV;AAAA,OADb;AAGA;;;wCAEmB;AACnBT,MAAAA,KAAK,CAACM,GAAN,CAAU,uEAAV,EACAC,IADA,CACK,UAAAC,QAAQ;AAAA,eACZL,UAAU,GAAGK,QAAQ,CAACC,IADV;AAAA,OADb;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAAhC;AACA,UAAMC,MAAM,GAAGd,WAAW,CAACe,KAAZ,CAAkB,KAAKJ,KAAL,CAAWC,QAAX,CAAoBC,MAAtC,CAAf;AACA,UAAMG,eAAe,GAAGF,MAAM,CAACG,OAA/B;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BM,eAA/B;;AACA,UAAGd,UAAH,EAAe;AACdC,QAAAA,kBAAkB,GAAGe,MAAM,CAACJ,MAAP,CAAcZ,UAAd,EAA0BiB,MAA1B,CACpB,UAACC,SAAD,EAAe;AACd,iBAAOA,SAAS,CAACH,OAAV,KAAsBD,eAA7B;AACA,SAHmB,CAArB;AAKAP,QAAAA,OAAO,CAACC,GAAR,CAAYP,kBAAZ;AACA;AACD;;;6BAEQ;AACR,UAAIK,IAAI,GAAG,IAAX;;AACA,UAAGN,UAAH,EAAe;AACdM,QAAAA,IAAI,GAAGU,MAAM,CAACJ,MAAP,CAAcZ,UAAd,EAA0BmB,GAA1B,CACP,UAACD,SAAD,EAAe;AACd,iBAAQ,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAAR;AACA,SAHM,CAAP;AAIAX,QAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AACA;;AACE,aACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAI,QAAA,KAAK,EAAE;AAAEoB,UAAAA,MAAM,EAAE;AAAV,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkCN,eAAlC,CADD,EAEI,oBAAC,IAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,QAAQ,MAFV;AAGE,QAAA,UAAU,EAAER,IAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADE;AAWH;;;;EA9CuBZ,S;;AAiDzB,eAAeQ,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Route, NavLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\nimport { List } from 'antd';\r\n\r\nlet interviews = null;\r\nlet  filteredInterviews = null;\r\n\r\nclass Interviews extends Component {\r\n\r\n\tcomponentWillMount() {\r\n\t\taxios.get('https://interview-corner-1de29.firebaseio.com/updated-interviews.json').\r\n\t\tthen(response => \r\n\t\t\tinterviews = response.data);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\taxios.get('https://interview-corner-1de29.firebaseio.com/updated-interviews.json').\r\n\t\tthen(response => \r\n\t\t\tinterviews = response.data);\r\n\t\tconsole.log(this.props.location.search);\r\n\t\tconst values = queryString.parse(this.props.location.search);\r\n\t\tconst selectedCollege = values.college;\r\n\t\tconsole.log('selectedCollege', selectedCollege);\r\n\t\tif(interviews) {\r\n\t\t\tfilteredInterviews = Object.values(interviews).filter(\r\n\t\t\t\t(interview) => {\r\n\t\t\t\t\treturn interview.college === selectedCollege;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tconsole.log(filteredInterviews);\t\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet data = null;\r\n\t\tif(interviews) {\r\n\t\t\tdata = Object.values(interviews).map(\r\n\t\t\t(interview) => {\r\n\t\t\t\treturn (<List.Item>interview.name + \" : \" + interview.college</List.Item>);\r\n\t\t\t});\r\n\t\t\tconsole.log(interviews);\r\n\t\t}\r\n\t    return (\r\n\t\t\t<div>\r\n\t\t\t\t<h3 style={{ margin: '16px 0' }}>{selectedCollege}</h3>\r\n\t\t\t    <List\r\n\t\t\t      size=\"large\"\r\n\t\t\t      bordered\r\n\t\t\t      dataSource={data}>\r\n\r\n\t\t\t    </List>\r\n\t\t\t</div>\r\n    \t);\r\n\t}\r\n}\r\n\r\nexport default Interviews;"]},"metadata":{},"sourceType":"module"}