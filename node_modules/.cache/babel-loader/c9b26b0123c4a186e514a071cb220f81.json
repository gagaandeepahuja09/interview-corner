{"ast":null,"code":"import _toConsumableArray from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/gagandeep/Documents/Projects/interview-corner/src/Components/Aptitude.js\";\nimport React, { Component } from 'react';\nimport { Radio, Card, Button, Icon } from 'antd';\nimport { questions } from '../Data/aptitude';\nimport _ from 'lodash';\nimport queryString from 'query-string';\nvar RadioGroup = Radio.Group;\nvar icon = null;\nvar disp = null;\nvar questionChoices = questions;\nvar tickStyle = {\n  'padding': '10px 25px',\n  'fontSize': '20px'\n};\n\nvar Quiz =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Quiz, _Component);\n\n  function Quiz() {\n    var _this;\n\n    _classCallCheck(this, Quiz);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Quiz).call(this));\n\n    _this.handleSubmit = function () {\n      _this.setState({\n        enableAnswers: true\n      });\n\n      var score = 0;\n      var givenAns = _this.state.givenAns;\n      var actualAns = _this.state.actualAns;\n      console.log('givenAns', _this.state.givenAns, 'actualAns', _this.state.actualAns);\n\n      for (var i = 0; i < 25; i++) {\n        var x = 9;\n\n        if (givenAns[i] && actualAns[i]) {\n          x = givenAns[i].localeCompare(actualAns[i]);\n        }\n\n        if (x === 0) {\n          score = score + 10;\n\n          _this.setState({\n            score: score\n          });\n        }\n\n        console.log(score);\n      }\n\n      _this.setState({\n        score: score\n      });\n\n      console.log(_this.state.score);\n      window.scrollTo(0, document.body.scrollHeight);\n    };\n\n    _this.onInput = function (e) {\n      var id = e.target.name;\n      var ans = e.target.value;\n      var newAns = _this.state.givenAns;\n      var actualAns = _this.state.actualAns;\n      newAns[id - 1] = ans;\n\n      _this.setState({\n        givenAns: newAns\n      });\n\n      console.log(_this.state.givenAns);\n      var answer = {\n        id: id,\n        answer: e.target.value\n      };\n      var answers;\n\n      if (_this.state.answers.some(function (answer) {\n        return answer.id === id;\n      })) {\n        answers = _toConsumableArray(_this.state.answers.filter(function (answer) {\n          return answer.id !== id;\n        })).concat([answer]);\n      } else {\n        answers = _toConsumableArray(_this.state.answers).concat([answer]);\n      }\n\n      _this.setState({\n        answers: answers\n      }, function () {\n        return console.log(_this.state.answers);\n      });\n    };\n\n    _this.state = {\n      answers: [],\n      givenAns: [],\n      actualAns: [],\n      enableAnswers: false,\n      score: null\n    };\n    _this.onInput = _this.onInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.buildRadioButtons = _this.buildRadioButtons.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Quiz, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var values = queryString.parse(this.props.location.search);\n      selectedCollege = values.type;\n\n      var selAns = _.range(25).map(function () {\n        return \"XXX\";\n      });\n\n      var givenAns = _.range(25).map(function () {\n        return \"XXX\";\n      });\n\n      this.setState({\n        givenAns: givenAns,\n        actualAns: selAns\n      });\n      var actualAns = selAns;\n      var k = 0;\n      questionChoices.forEach(function (obj) {\n        selAns[k] = obj.answer;\n        k++;\n      });\n      this.setState({\n        selAns: selAns\n      });\n      console.log(this.state.selAns);\n    }\n  }, {\n    key: \"buildRadioButtons\",\n    value: function buildRadioButtons(arr, type, id, ans) {\n      var _this2 = this;\n\n      disp = arr.map(function (choice, i) {\n        if (_this2.state.enableAnswers) {\n          if (ans === choice) {\n            console.log(\"Hello\");\n            icon = React.createElement(Icon, {\n              type: \"check-circle\",\n              theme: \"twoTone\",\n              twoToneColor: \"#52c41a\",\n              style: tickStyle,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 94\n              },\n              __self: this\n            });\n          } else {\n            icon = null;\n          }\n        }\n\n        return React.createElement(\"div\", {\n          key: i,\n          value: choice,\n          className: \"righter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"radio\",\n          className: \"custom-control-input\",\n          name: id,\n          id: choice,\n          value: choice,\n          onChange: _this2.onInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          for: choice,\n          onChange: _this2.onInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, choice), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, icon));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var showScore = null;\n      var showButton = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        size: \"large\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Submit Test\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }));\n\n      if (this.state.enableAnswers) {\n        icon = React.createElement(Icon, {\n          type: \"check-circle\",\n          theme: \"twoTone\",\n          twoToneColor: \"#52c41a\",\n          style: tickStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        });\n        showScore = React.createElement(\"div\", {\n          className: \"card text-white bg-primary mb-3\",\n          style: {\n            'max-width': '710px',\n            'margin': '0 auto',\n            'padding': '10px',\n            'border-radius': '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          className: \"card-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \" \", React.createElement(Icon, {\n          type: \"like\",\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }), \" Your Test Is Completed!\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }), React.createElement(\"h3\", {\n          className: \"card-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, \"Your score is \", this.state.score, \"/250\")));\n        window.scrollTo(0, document.body.scrollHeight);\n        showButton = null;\n      }\n\n      var iterator = questionChoices.map(function (question, i) {\n        var choices = question.choices,\n            questionType = question.questionType,\n            questionID = question.questionID,\n            questionText = question.questionText,\n            answer = question.answer;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, questionID, \". \", questionText), _this3.buildRadioButtons(choices, questionType, questionID, answer), disp)), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form alignLeft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, iterator)), showButton, showScore, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Quiz;\n}(Component);\n\nexport default Quiz;","map":{"version":3,"sources":["/home/gagandeep/Documents/Projects/interview-corner/src/Components/Aptitude.js"],"names":["React","Component","Radio","Card","Button","Icon","questions","_","queryString","RadioGroup","Group","icon","disp","questionChoices","tickStyle","Quiz","handleSubmit","setState","enableAnswers","score","givenAns","state","actualAns","console","log","i","x","localeCompare","window","scrollTo","document","body","scrollHeight","onInput","e","id","target","name","ans","value","newAns","answer","answers","some","filter","bind","buildRadioButtons","values","parse","props","location","search","selectedCollege","type","selAns","range","map","k","forEach","obj","arr","choice","showScore","showButton","iterator","question","choices","questionType","questionID","questionText"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Radio, Card, Button, Icon } from 'antd';\nimport  { questions } from '../Data/aptitude';\nimport _ from 'lodash';\nimport queryString from 'query-string';\n\nconst RadioGroup = Radio.Group;\nlet icon = null;\nlet disp = null;\n\nlet questionChoices = questions;\n\nconst tickStyle = {\n  'padding': '10px 25px',\n  'fontSize': '20px',\n};\n\nclass Quiz extends Component {\n\tconstructor() {\n    super();\n    this.state = { answers: [], \n      givenAns: [],\n      actualAns: [],\n      enableAnswers: false,\n      score: null,\n       };\n    this.onInput = this.onInput.bind(this);\n    this.buildRadioButtons = this.buildRadioButtons.bind(this);\n  }\n\n  componentWillMount() {\n    const values = queryString.parse(this.props.location.search);\n    selectedCollege = values.type;\n    const selAns = _.range(25).map(function () { return \"XXX\" });\n    const givenAns = _.range(25).map(function () { return \"XXX\" });\n    this.setState({ givenAns: givenAns, actualAns: selAns });\n    let actualAns = selAns;\n    let k = 0;\n\n    questionChoices.forEach((obj) => {\n      selAns[k] = obj.answer;\n      k++;\n    });\n    this.setState({ selAns });\n    console.log(this.state.selAns);\n  }\n\n  handleSubmit = () => {\n    this.setState({ enableAnswers: true });\n    let score = 0;\n    let givenAns = this.state.givenAns;\n    let actualAns = this.state.actualAns;\n    console.log('givenAns', this.state.givenAns, 'actualAns', this.state.actualAns);\n    for(let i=0; i<25; i++) {\n      let x = 9;\n      if(givenAns[i] && actualAns[i]) {\n        x = givenAns[i].localeCompare(actualAns[i])\n      }\n      if(x === 0) {\n        score = score + 10;\n        this.setState({ score: score });\n      }\n      console.log(score); \n    }\n    this.setState({ score: score });\n    console.log(this.state.score);\n    window.scrollTo(0,document.body.scrollHeight);\n  }\n\n  onInput = (e) => {\n    const id = e.target.name;\n    const ans = e.target.value;\n    const newAns = this.state.givenAns;\n    const actualAns = this.state.actualAns;\n    newAns[id-1] = ans;\n    this.setState({ givenAns: newAns });\n\n    console.log(this.state.givenAns);\n    const answer = { id, answer: e.target.value };\n    let answers;\n    if (this.state.answers.some(answer => answer.id === id)) {\n      answers = [...this.state.answers.filter(answer => answer.id !== id), answer];\n    } else {\n      answers = [...this.state.answers, answer];\n    }\n    this.setState({ answers }, () => console.log(this.state.answers));\n  }\n\n  buildRadioButtons(arr, type, id, ans) {\n    disp = arr.map((choice, i) => {\n      if(this.state.enableAnswers) {\n        if(ans === choice) {\n          console.log(\"Hello\");\n          icon = <Icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" style = {tickStyle} />\n        }\n        else {\n          icon = null;\n        }\n      }\n      return (\n        <div key={i} value={choice} className = \"righter\">\n            <input\n            type=\"radio\"\n            className=\"custom-control-input\"\n            name={id}\n            id={choice}\n            value={choice}\n            onChange={this.onInput}\n          />        \n          <label for = {choice} onChange={this.onInput}>{choice}</label>\n          <span>{icon}</span>\n        </div>\n        );  \n      });\n    }\n\n  render() {\n    let showScore = null;\n    let showButton = (<div><Button type=\"primary\" size=\"large\" onClick = {this.handleSubmit}>Submit Test</Button> <br/> <br/></div>);\n    if(this.state.enableAnswers) {\n      icon = <Icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" style = {tickStyle} />\n      showScore = (\n        <div className=\"card text-white bg-primary mb-3\" style = {{ 'max-width': '710px', 'margin': '0 auto', 'padding': '10px', 'border-radius': '10px' }}>\n          <div className=\"card-body\">\n            <h2 className=\"card-title\"> <Icon type=\"like\" size=\"large\" /> Your Test Is Completed!</h2>\n            <br/>\n            <h3 className=\"card-text\">Your score is {this.state.score}/250</h3>\n          </div>\n        </div>\n        );\n        window.scrollTo(0,document.body.scrollHeight);\n      showButton = null;  \n    }\n    var iterator = questionChoices.map((question, i) => {\n      const { choices, questionType, questionID, questionText, answer } = question;\n      return (\n      \t<div>\n      \t\t<Card>\n\t        \t<div key={i}>\n\t          \t<h3>{questionID}. {questionText}</h3>\n\t          \t{this.buildRadioButtons(choices, questionType, questionID, answer)}\n              {disp}\n\t        \t</div>\n\t        </Card>\n\t        <br/>\n\t    </div>    \n      );\n    });\n    return (\n        <div>\n          <div className=\"form alignLeft\">\n            <div className=\"h3\">\n              {iterator}\n            </div>\n          </div>\n          {showButton}\n          {showScore} <br/><br/><br/>\n        </div>\n    );\n  }\n}\n\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}