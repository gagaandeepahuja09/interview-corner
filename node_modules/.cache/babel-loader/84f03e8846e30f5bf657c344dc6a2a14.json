{"ast":null,"code":"import _classCallCheck from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gagandeep/Documents/Projects/interview-corner/src/Components/CompanyInterviews.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { NavLink } from 'react-router-dom';\nimport queryString from 'query-string';\nvar selectedCompany = null;\nvar filteredInterviews = null;\nvar finalInterviews = null;\n\nvar CompanyInterviews =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CompanyInterviews, _Component);\n\n  function CompanyInterviews() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CompanyInterviews);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CompanyInterviews)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      interview: null\n    };\n\n    _this.loadInterview = function (interview) {\n      console.log(interview);\n      var foundKey = null;\n\n      if (_this.state.interviews) {\n        Object.keys(_this.state.interviews).forEach(function (element) {\n          if (_this.state.interviews[element] === interview) {\n            foundKey = element;\n          }\n        });\n      }\n      /*if(interviews && filteredInterviews) {\n      \tfoundKey = arr.find(key => Object.entries(key[1]) === univarr);\n      \tconsole.log(foundKey);\n      }*/\n\n\n      _this.props.history.push({\n        pathname: '/interview-corner/interview/',\n        search: 'id' + '=' + encodeURIComponent(foundKey)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CompanyInterviews, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      axios.get('https://interview-corner-1de29.firebaseio.com/updated-interviews.json').then(function (response) {\n        return _this2.setState({\n          interviews: response.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.interviews) {\n        var values = queryString.parse(this.props.location.search);\n        selectedCompany = values.company;\n        filteredInterviews = Object.values(this.state.interviews).filter(function (interview) {\n          return interview.company === selectedCompany;\n        });\n        console.log(Object.values(filteredInterviews));\n\n        if (filteredInterviews) {\n          finalInterviews = filteredInterviews.map(function (interview) {\n            return React.createElement(\"tr\", {\n              onClick: function onClick() {\n                return _this3.loadInterview(interview);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 56\n              },\n              __self: this\n            }, React.createElement(\"th\", {\n              scope: \"row\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57\n              },\n              __self: this\n            }, interview.name), React.createElement(\"th\", {\n              scope: \"row\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 58\n              },\n              __self: this\n            }, interview.branch), React.createElement(\"th\", {\n              scope: \"row\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 59\n              },\n              __self: this\n            }, interview.company), React.createElement(\"th\", {\n              scope: \"row\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60\n              },\n              __self: this\n            }, interview.college));\n          });\n        }\n      }\n\n      return React.createElement(\"table\", {\n        className: \"table table-hover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Branch\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Company\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Institute\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, finalInterviews));\n    }\n  }]);\n\n  return CompanyInterviews;\n}(Component);\n\nexport default CompanyInterviews;","map":{"version":3,"sources":["/home/gagandeep/Documents/Projects/interview-corner/src/Components/CompanyInterviews.js"],"names":["React","Component","axios","NavLink","queryString","selectedCompany","filteredInterviews","finalInterviews","CompanyInterviews","state","interview","loadInterview","console","log","foundKey","interviews","Object","keys","forEach","element","props","history","push","pathname","search","encodeURIComponent","get","then","response","setState","data","values","parse","location","company","filter","map","name","branch","college"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { NavLink } from 'react-router-dom';\nimport queryString from 'query-string';\n\nlet selectedCompany = null;\nlet filteredInterviews = null;\nlet finalInterviews = null;\n\nclass CompanyInterviews extends Component {\n\n\tstate = {\n\t\tinterview: null,\n\t}\n\n\tloadInterview = (interview) => {\n\t\tconsole.log(interview);\n\t\tlet foundKey = null;\n\t\tif(this.state.interviews) {\n\t\t\tObject.keys(this.state.interviews).forEach((element) => {\n\t\t\t\tif(this.state.interviews[element] === interview) {\n\t\t\t\t\tfoundKey = element;\n\t\t\t\t}\n\t\t\t});\n\t\t}\t\n\t\t/*if(interviews && filteredInterviews) {\n\t\t\tfoundKey = arr.find(key => Object.entries(key[1]) === univarr);\n\t\t\tconsole.log(foundKey);\n\t\t}*/\n\t\tthis.props.history.push({\n\t\t\tpathname: '/interview-corner/interview/',\n\t\t\tsearch: 'id' + '=' + encodeURIComponent(foundKey),\n\t\t});\n\t}\n\n\tcomponentWillMount() {\n\t\taxios.get('https://interview-corner-1de29.firebaseio.com/updated-interviews.json').\n\t\tthen(response => \n\t\t\tthis.setState({ interviews : response.data}) );\n\t}\n\n\trender() {\n\t\tif(this.state.interviews) {\n\t\t\tconst values = queryString.parse(this.props.location.search);\n\t \t\tselectedCompany = values.company;\n\t \t\tfilteredInterviews = Object.values(this.state.interviews).filter(\n\t\t\t\t(interview) => {\n\t\t\t\t\treturn (interview.company === selectedCompany);\n\t\t\t\t}\n\t\t\t);\n\t\t\tconsole.log(Object.values(filteredInterviews));\n\t\t\tif(filteredInterviews) {\n\t\t\t\tfinalInterviews = filteredInterviews.map(\n\t\t\t\t\t(interview) => {\n\t\t\t\t\t\t\treturn ( \n\t\t\t\t\t\t\t\t\t<tr onClick={() => this.loadInterview(interview)}>\n\t\t\t\t\t\t\t\t\t\t<th scope = \"row\">{interview.name}</th>\n\t\t\t\t\t\t\t\t\t\t<th scope = \"row\">{interview.branch}</th>\n\t\t\t\t\t\t\t\t\t\t<th scope = \"row\">{interview.company}</th>\n\t\t\t\t\t\t\t\t\t\t<th scope = \"row\">{interview.college}</th>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t\t<table className=\"table table-hover\">\n\t\t\t\t  <thead>\n\t\t\t\t    <tr>\n\t\t\t\t      <th scope=\"col\">Name</th>\n\t\t\t\t      <th scope=\"col\">Branch</th>\n\t\t\t\t      <th scope=\"col\">Company</th>\n\t\t\t\t      <th scope=\"col\">Institute</th>\n\t\t\t\t    </tr>\n\t\t\t\t  </thead>\n\t\t\t\t  <tbody>\n\t\t\t\t  \t{finalInterviews}\n\t\t\t\t  </tbody>\n\t\t\t\t</table>\n\t\t\t);\n\t}\n}\n\nexport default CompanyInterviews;"]},"metadata":{},"sourceType":"module"}