{"ast":null,"code":"import _classCallCheck from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gagandeep/Documents/Projects/interview-corner/src/Components/UnivInterviews.js\";\nimport React, { Component } from 'react';\nimport { Route, NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport queryString from 'query-string';\nimport { List } from 'antd';\nvar interviews = null;\nvar filteredInterviews = null;\nvar collegeInterviews = null;\nvar selectedCollege = null;\n\nvar Interviews =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Interviews, _Component);\n\n  function Interviews() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Interviews);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Interviews)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      filteredInterviews: null\n    };\n\n    _this.loadInterview = function (interview) {\n      var arr = Object.entries(interviews);\n      var univarr = Object.entries(interview);\n      console.log(arr);\n      console.log(univarr);\n      var foundKey = null;\n\n      if (interviews && filteredInterviews) {\n        foundKey = arr.find(function (key) {\n          return Object.entries(key[1]) === univarr;\n        });\n        console.log(foundKey);\n      }\n\n      _this.props.history.push({\n        pathname: '/interview-corner/univ-interviews/',\n        search: 'id' + '=' + encodeURIComponent(foundKey)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Interviews, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      axios.get('https://interview-corner-1de29.firebaseio.com/updated-interviews.json').then(function (response) {\n        return interviews = response.data;\n      });\n      var values = queryString.parse(this.props.location.search);\n      selectedCollege = values.college;\n\n      if (interviews) {\n        filteredInterviews = Object.values(interviews).filter(function (interview) {\n          return interview.college === selectedCollege;\n        });\n        this.setState({\n          filteredInterviews: filteredInterviews\n        });\n        console.log(filteredInterviews);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      collegeInterviews = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Loading...\");\n\n      if (this.state.filteredInterviews) {\n        collegeInterviews = Object.values(filteredInterviews).map(function (interview) {\n          return React.createElement(\"div\", {\n            key: interview,\n            onClick: function onClick() {\n              return _this2.loadInterview(interview);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, React.createElement(NavLink, {\n            to: \"/interview-corner/univ-interview\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: \"#\",\n            className: \"list-group-item list-group-item-success notFull\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, interview.name, \" Interview for \", interview.company))));\n          console.log('name', interview.name);\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, collegeInterviews);\n    }\n  }]);\n\n  return Interviews;\n}(Component);\n\nexport default Interviews;","map":{"version":3,"sources":["/home/gagandeep/Documents/Projects/interview-corner/src/Components/UnivInterviews.js"],"names":["React","Component","Route","NavLink","axios","queryString","List","interviews","filteredInterviews","collegeInterviews","selectedCollege","Interviews","state","loadInterview","interview","arr","Object","entries","univarr","console","log","foundKey","find","key","props","history","push","pathname","search","encodeURIComponent","get","then","response","data","values","parse","location","college","filter","setState","map","name","company"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Route, NavLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\nimport { List } from 'antd';\r\n\r\nlet interviews = null;\r\nlet  filteredInterviews = null;\r\nlet collegeInterviews = null;\r\nlet selectedCollege = null;\r\n\r\nclass Interviews extends Component {\r\n\r\n\tstate = {\r\n\t\tfilteredInterviews: null,\r\n\t}\r\n\r\n\tloadInterview = (interview) => {\r\n\t\tconst arr = Object.entries(interviews);\r\n\t\tconst univarr = Object.entries(interview);\r\n\t\tconsole.log(arr);\r\n\t\tconsole.log(univarr);\r\n\t\tlet foundKey = null;\r\n\t\tif(interviews && filteredInterviews) {\r\n\t\t\tfoundKey = arr.find(key => Object.entries(key[1]) === univarr);\r\n\t\t\tconsole.log(foundKey);\r\n\t\t}\r\n\t\tthis.props.history.push({\r\n\t\t\tpathname: '/interview-corner/univ-interviews/',\r\n\t\t\tsearch: 'id' + '=' + encodeURIComponent(foundKey),\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\taxios.get('https://interview-corner-1de29.firebaseio.com/updated-interviews.json').\r\n\t\tthen(response => \r\n\t\t\tinterviews = response.data);\r\n\t\tconst values = queryString.parse(this.props.location.search);\r\n\t \tselectedCollege = values.college;\r\n\t\tif(interviews) {\r\n\t\t\tfilteredInterviews = Object.values(interviews).filter(\r\n\t\t\t\t(interview) => {\r\n\t\t\t\t\treturn interview.college === selectedCollege;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tthis.setState({ filteredInterviews: filteredInterviews});\r\n\t\t\tconsole.log(filteredInterviews);\t\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\t\r\n\t\tcollegeInterviews = <div>Loading...</div>\r\n\t\tif(this.state.filteredInterviews) {\r\n\t\t\tcollegeInterviews = Object.values(filteredInterviews).map(\r\n\t\t\t\t(interview) => {\r\n\t\t\t\t\t\treturn ( <div key={interview} onClick={() => this.loadInterview(interview)}><NavLink to = \"/interview-corner/univ-interview\">\r\n\t\t\t\t\t\t\t<a href=\"#\" className=\"list-group-item list-group-item-success notFull\">\r\n\t\t\t\t\t\t\t<h4>{interview.name} Interview for {interview.company}</h4></a></NavLink></div>)\r\n\t\t\t\t\t\tconsole.log('name', interview.name); \r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t    return (\r\n\t\t\t<div className = \"list-group\">\r\n\t\t\t\t{collegeInterviews}\r\n\t\t\t</div>\r\n    \t);\r\n\t}\r\n}\r\n\r\nexport default Interviews;"]},"metadata":{},"sourceType":"module"}