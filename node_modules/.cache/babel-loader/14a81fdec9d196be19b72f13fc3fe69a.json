{"ast":null,"code":"import _classCallCheck from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gagandeep/Documents/Projects/interview-corner/src/Components/NewInterview.js\";\nimport React, { Component } from 'react';\nimport { Route, NavLink } from 'react-router-dom';\nimport axios from '../axios-interviews';\nimport { Form, Input, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nvar FormItem = Form.Item;\nvar Option = Select.Option;\nvar AutoCompleteOption = AutoComplete.Option;\n\nvar RegistrationForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RegistrationForm, _React$Component);\n\n  function RegistrationForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegistrationForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegistrationForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false,\n      autoCompleteResult: []\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    _this.handleConfirmBlur = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        confirmDirty: _this.state.confirmDirty || !!value\n      });\n    };\n\n    _this.handleWebsiteChange = function (value) {\n      var autoCompleteResult;\n\n      if (!value) {\n        autoCompleteResult = [];\n      } else {\n        autoCompleteResult = ['.com', '.org', '.net'].map(function (domain) {\n          return \"\".concat(value).concat(domain);\n        });\n      }\n\n      _this.setState({\n        autoCompleteResult: autoCompleteResult\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RegistrationForm, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var autoCompleteResult = this.state.autoCompleteResult;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 8\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n      var tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 16,\n            offset: 8\n          }\n        }\n      };\n      var prefixSelector = getFieldDecorator('prefix', {\n        initialValue: '86'\n      })(React.createElement(Select, {\n        style: {\n          width: 70\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"86\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"+86\"), React.createElement(Option, {\n        value: \"87\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"+87\")));\n      var websiteOptions = autoCompleteResult.map(function (website) {\n        return React.createElement(AutoCompleteOption, {\n          key: website,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, website);\n      });\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"E-mail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), getFieldDecorator('email', {\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }, {\n          validator: this.validateToNextPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Confirm Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), getFieldDecorator('confirm', {\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        onBlur: this.handleConfirmBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \"Nickname\\xA0\", React.createElement(Tooltip, {\n          title: \"What do you want others to call you?\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"question-circle-o\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), getFieldDecorator('nickname', {\n        rules: [{\n          required: true,\n          message: 'Please input your nickname!',\n          whitespace: true\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Habitual Residence\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), getFieldDecorator('residence', {\n        initialValue: ['zhejiang', 'hangzhou', 'xihu'],\n        rules: [{\n          type: 'array',\n          required: true,\n          message: 'Please select your habitual residence!'\n        }]\n      })(React.createElement(Cascader, {\n        options: residences,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Phone Number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), getFieldDecorator('phone', {\n        rules: [{\n          required: true,\n          message: 'Please input your phone number!'\n        }]\n      })(React.createElement(Input, {\n        addonBefore: prefixSelector,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Website\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), getFieldDecorator('website', {\n        rules: [{\n          required: true,\n          message: 'Please input website!'\n        }]\n      })(React.createElement(AutoComplete, {\n        dataSource: websiteOptions,\n        onChange: this.handleWebsiteChange,\n        placeholder: \"website\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      })))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Captcha\",\n        extra: \"We must make sure that your are a human.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(Row, {\n        gutter: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, getFieldDecorator('captcha', {\n        rules: [{\n          required: true,\n          message: 'Please input the captcha you got!'\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Get captcha\")))), React.createElement(FormItem, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), getFieldDecorator('agreement', {\n        valuePropName: 'checked'\n      })(React.createElement(Checkbox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"I have read the \", React.createElement(\"a\", {\n        href: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"agreement\")))), React.createElement(FormItem, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Register\")));\n    }\n  }]);\n\n  return RegistrationForm;\n}(React.Component);\n\nvar WrappedRegistrationForm = Form.create()(RegistrationForm);\nReactDOM.render(React.createElement(WrappedRegistrationForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 212\n  },\n  __self: this\n}), mountNode);\n\nvar NewInterview =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewInterview, _Component);\n\n  function NewInterview() {\n    var _getPrototypeOf3;\n\n    var _this2;\n\n    _classCallCheck(this, NewInterview);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(NewInterview)).call.apply(_getPrototypeOf3, [this].concat(args)));\n\n    _this2.onNameChange = function (event) {\n      _this2.setState({\n        name: event.target.value\n      });\n    };\n\n    _this2.onCompanyChange = function (event) {\n      _this2.setState({\n        company: event.target.value\n      });\n    };\n\n    _this2.onSubChange = function (event) {\n      _this2.setState({\n        sub: event.target.value\n      });\n    };\n\n    _this2.onOsChange = function (event) {\n      _this2.setState({\n        os: event.target.value\n      });\n    };\n\n    _this2.onDsChange = function (event) {\n      _this2.setState({\n        ds: event.target.value\n      });\n    };\n\n    _this2.onDbmsChange = function (event) {\n      _this2.setState({\n        dbms: event.target.value\n      });\n\n      console.log(_this2.state.dbms);\n    };\n\n    _this2.onHrChange = function (event) {\n      _this2.setState({\n        hr: event.target.value\n      });\n    };\n\n    _this2.onEmailChange = function (event) {\n      _this2.setState({\n        email: event.target.value\n      });\n    };\n\n    _this2.onSubmitForm = function (event) {\n      event.preventDefault();\n      var interview = {\n        student: {\n          name: _this2.state.name,\n          email: _this2.state.email\n        },\n        company: _this2.state.company,\n        questions: {\n          os: _this2.state.os,\n          ds: _this2.state.ds,\n          hr: _this2.state.hr,\n          dbms: _this2.state.dbms,\n          sub: _this2.state.sub\n        }\n      };\n      axios.post('/interviews.json', interview).then(function (response) {\n        return console.log(response);\n      }).catch(function (error) {\n        return console.log(error.response);\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(NewInterview, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"full_name\",\n        type: \"text\",\n        onChange: function onChange(event) {\n          return _this3.onNameChange(event);\n        },\n        value: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"full_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"Full Name\"))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col s6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"company\",\n        type: \"text\",\n        onChange: function onChange(event) {\n          return _this3.onCompanyChange(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \"Name Of Company\")), React.createElement(\"div\", {\n        className: \"input-field col s6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"subject\",\n        type: \"text\",\n        onChange: function onChange(event) {\n          return _this3.onSubChange(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"subject\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"Preferred Subject\"))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"os\",\n        type: \"text\",\n        onChange: function onChange(event) {\n          return _this3.onOsChange(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"os\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"Operating System Questions\"))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"ds\",\n        type: \"text\",\n        onChange: function onChange(event) {\n          return _this3.onDsChange(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"ds\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, \"Algorithms Questions\"))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"dbms\",\n        type: \"text\",\n        onChange: function onChange(event) {\n          return _this3.onDbmsChange(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"dbms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, \"DBMS Questions\"))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"hr\",\n        type: \"text\",\n        onChange: function onChange(event) {\n          return _this3.onHrChange(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"hr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"Questions asked in HR Round\"))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"email\",\n        type: \"email\",\n        onChange: function onChange(event) {\n          return _this3.onEmailChange(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, \"Email\"))), React.createElement(\"button\", {\n        className: \"btn waves-effect waves-light\",\n        type: \"submit\",\n        name: \"action\",\n        onClick: function onClick(event) {\n          return _this3.onSubmitForm(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return NewInterview;\n}(Component);\n\nexport default NewInterview;","map":{"version":3,"sources":["/home/gagandeep/Documents/Projects/interview-corner/src/Components/NewInterview.js"],"names":["React","Component","Route","NavLink","axios","Form","Input","Tooltip","Icon","Cascader","Select","Row","Col","Checkbox","Button","AutoComplete","FormItem","Item","Option","AutoCompleteOption","RegistrationForm","state","confirmDirty","autoCompleteResult","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","console","log","handleConfirmBlur","value","target","setState","handleWebsiteChange","map","domain","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","prefixSelector","initialValue","width","websiteOptions","website","rules","type","message","required","validator","validateToNextPassword","compareToFirstPassword","whitespace","residences","valuePropName","WrappedRegistrationForm","create","ReactDOM","render","mountNode","NewInterview","onNameChange","event","name","onCompanyChange","company","onSubChange","sub","onOsChange","os","onDsChange","ds","onDbmsChange","dbms","onHrChange","hr","onEmailChange","email","onSubmitForm","interview","student","questions","post","then","response","catch","error"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Route, NavLink } from 'react-router-dom';\r\nimport axios from '../axios-interviews';\r\n\r\nimport { Form, Input, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\nclass RegistrationForm extends React.Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  }\r\n\r\n  handleConfirmBlur = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  }\r\n\r\n  handleWebsiteChange = (value) => {\r\n    let autoCompleteResult;\r\n    if (!value) {\r\n      autoCompleteResult = [];\r\n    } else {\r\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\r\n    }\r\n    this.setState({ autoCompleteResult });\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { autoCompleteResult } = this.state;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    const prefixSelector = getFieldDecorator('prefix', {\r\n      initialValue: '86',\r\n    })(\r\n      <Select style={{ width: 70 }}>\r\n        <Option value=\"86\">+86</Option>\r\n        <Option value=\"87\">+87</Option>\r\n      </Select>\r\n    );\r\n\r\n    const websiteOptions = autoCompleteResult.map(website => (\r\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\r\n    ));\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"E-mail\"\r\n        >\r\n          {getFieldDecorator('email', {\r\n            rules: [{\r\n              type: 'email', message: 'The input is not valid E-mail!',\r\n            }, {\r\n              required: true, message: 'Please input your E-mail!',\r\n            }],\r\n          })(\r\n            <Input />\r\n          )}\r\n        </FormItem>\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Password\"\r\n        >\r\n          {getFieldDecorator('password', {\r\n            rules: [{\r\n              required: true, message: 'Please input your password!',\r\n            }, {\r\n              validator: this.validateToNextPassword,\r\n            }],\r\n          })(\r\n            <Input type=\"password\" />\r\n          )}\r\n        </FormItem>\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Confirm Password\"\r\n        >\r\n          {getFieldDecorator('confirm', {\r\n            rules: [{\r\n              required: true, message: 'Please confirm your password!',\r\n            }, {\r\n              validator: this.compareToFirstPassword,\r\n            }],\r\n          })(\r\n            <Input type=\"password\" onBlur={this.handleConfirmBlur} />\r\n          )}\r\n        </FormItem>\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label={(\r\n            <span>\r\n              Nickname&nbsp;\r\n              <Tooltip title=\"What do you want others to call you?\">\r\n                <Icon type=\"question-circle-o\" />\r\n              </Tooltip>\r\n            </span>\r\n          )}\r\n        >\r\n          {getFieldDecorator('nickname', {\r\n            rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\r\n          })(\r\n            <Input />\r\n          )}\r\n        </FormItem>\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Habitual Residence\"\r\n        >\r\n          {getFieldDecorator('residence', {\r\n            initialValue: ['zhejiang', 'hangzhou', 'xihu'],\r\n            rules: [{ type: 'array', required: true, message: 'Please select your habitual residence!' }],\r\n          })(\r\n            <Cascader options={residences} />\r\n          )}\r\n        </FormItem>\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Phone Number\"\r\n        >\r\n          {getFieldDecorator('phone', {\r\n            rules: [{ required: true, message: 'Please input your phone number!' }],\r\n          })(\r\n            <Input addonBefore={prefixSelector} style={{ width: '100%' }} />\r\n          )}\r\n        </FormItem>\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Website\"\r\n        >\r\n          {getFieldDecorator('website', {\r\n            rules: [{ required: true, message: 'Please input website!' }],\r\n          })(\r\n            <AutoComplete\r\n              dataSource={websiteOptions}\r\n              onChange={this.handleWebsiteChange}\r\n              placeholder=\"website\"\r\n            >\r\n              <Input />\r\n            </AutoComplete>\r\n          )}\r\n        </FormItem>\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Captcha\"\r\n          extra=\"We must make sure that your are a human.\"\r\n        >\r\n          <Row gutter={8}>\r\n            <Col span={12}>\r\n              {getFieldDecorator('captcha', {\r\n                rules: [{ required: true, message: 'Please input the captcha you got!' }],\r\n              })(\r\n                <Input />\r\n              )}\r\n            </Col>\r\n            <Col span={12}>\r\n              <Button>Get captcha</Button>\r\n            </Col>\r\n          </Row>\r\n        </FormItem>\r\n        <FormItem {...tailFormItemLayout}>\r\n          {getFieldDecorator('agreement', {\r\n            valuePropName: 'checked',\r\n          })(\r\n            <Checkbox>I have read the <a href=\"\">agreement</a></Checkbox>\r\n          )}\r\n        </FormItem>\r\n        <FormItem {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">Register</Button>\r\n        </FormItem>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedRegistrationForm = Form.create()(RegistrationForm);\r\n\r\nReactDOM.render(<WrappedRegistrationForm />, mountNode);\r\n\r\nclass NewInterview extends Component {\r\n\r\n\tonNameChange = (event) => {\r\n\t\tthis.setState({ name: event.target.value });\r\n\t}\r\n\r\n\tonCompanyChange = (event) => {\r\n\t\tthis.setState({ company: event.target.value });\r\n\t}\r\n\r\n\tonSubChange = (event) => {\r\n\t\tthis.setState({ sub: event.target.value });\r\n\t}\r\n\r\n\tonOsChange = (event) => {\r\n\t\tthis.setState({ os: event.target.value });\r\n\t}\r\n\r\n\tonDsChange = (event) => {\r\n\t\tthis.setState({ ds: event.target.value });\r\n\t}\r\n\r\n\tonDbmsChange = (event) => {\r\n\t\tthis.setState({ dbms: event.target.value });\r\n\t\tconsole.log(this.state.dbms);\r\n\t}\r\n\r\n\tonHrChange = (event) => {\r\n\t\tthis.setState({ hr: event.target.value });\r\n\t}\r\n\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({ email: event.target.value });\r\n\t}\r\n\r\n\tonSubmitForm = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst interview = {\r\n\t\t\tstudent: {\r\n\t\t\t\tname: this.state.name,\r\n\t\t\t\temail: this.state.email,\r\n\t\t\t},\r\n\t\t\tcompany: this.state.company,\r\n\t\t\tquestions: {\r\n\t\t\t\tos: this.state.os,\r\n\t\t\t\tds: this.state.ds,\r\n\t\t\t\thr: this.state.hr,\r\n\t\t\t\tdbms: this.state.dbms,\r\n\t\t\t\tsub: this.state.sub,\t\r\n\t\t\t}\r\n\t\t}\r\n\t\taxios.post('/interviews.json', interview)\r\n\t\t.then(response => console.log(response))\r\n\t\t.catch(error => console.log(error.response));\r\n\t}\r\n\r\n\trender() {\r\n\t    return (\r\n\t    \t<div>\r\n\t    \t\t<div className=\"row\">\r\n\t\t\t\t    <form className=\"col s12\">\r\n\t\t\t\t      <div className=\"row\">\r\n\t\t\t\t        <div className=\"input-field col s12\">\r\n\t\t\t\t          <input id=\"full_name\" type=\"text\" \r\n\t\t\t\t          onChange = {(event) => this.onNameChange(event)} \r\n\t\t\t\t          value = {this.state.name} />\r\n\t\t\t\t          <label htmlFor=\"full_name\">Full Name</label>\r\n\t\t\t\t        </div>\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"row\">\r\n\t\t\t\t        <div className=\"input-field col s6\">\r\n\t\t\t\t          <input id=\"company\" type=\"text\" \r\n\t\t\t\t          onChange = {(event) => this.onCompanyChange(event)}\r\n\t\t\t\t          />\r\n\t\t\t\t          <label htmlFor=\"company\">Name Of Company</label>\r\n\t\t\t\t        </div>\r\n\t\t\t\t        <div className=\"input-field col s6\">\r\n\t\t\t\t          <input id=\"subject\" type=\"text\"\r\n\t\t\t\t          onChange = {(event) => this.onSubChange(event)}\r\n\t\t\t\t           />\r\n\t\t\t\t          <label htmlFor=\"subject\">Preferred Subject</label>\r\n\t\t\t\t        </div>\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"row\">\r\n\t\t\t\t        <div className=\"input-field col s12\">\r\n\t\t\t\t          <input id=\"os\" type=\"text\" \r\n\t\t\t\t          onChange = {(event) => this.onOsChange(event)}\r\n\t\t\t\t          />\r\n\t\t\t\t          <label htmlFor=\"os\">Operating System Questions</label>\r\n\t\t\t\t        </div>\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"row\">\r\n\t\t\t\t        <div className=\"input-field col s12\">\r\n\t\t\t\t          <input id=\"ds\" type=\"text\" \r\n\t\t\t\t          onChange = {(event) => this.onDsChange(event)}\r\n\t\t\t\t          />\r\n\t\t\t\t          <label htmlFor=\"ds\">Algorithms Questions</label>\r\n\t\t\t\t        </div>\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"row\">\r\n\t\t\t\t        <div className=\"input-field col s12\">\r\n\t\t\t\t          <input id=\"dbms\" type=\"text\" \r\n\t\t\t\t          onChange = {(event) => this.onDbmsChange(event)}\r\n\t\t\t\t          />\r\n\t\t\t\t          <label htmlFor=\"dbms\">DBMS Questions</label>\r\n\t\t\t\t        </div>\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"row\">\r\n\t\t\t\t        <div className=\"input-field col s12\">\r\n\t\t\t\t          <input id=\"hr\" type=\"text\"\r\n\t\t\t\t          onChange = {(event) => this.onHrChange(event)} \r\n\t\t\t\t          />\r\n\t\t\t\t          <label htmlFor=\"hr\">Questions asked in HR Round</label>\r\n\t\t\t\t        </div>\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"row\">\r\n\t\t\t\t        <div className=\"input-field col s12\">\r\n\t\t\t\t          <input id=\"email\" type=\"email\"\r\n\t\t\t\t          onChange = {(event) => this.onEmailChange(event)} \r\n\t\t\t\t          />\r\n\t\t\t\t          <label htmlFor=\"email\">Email</label>\r\n\t\t\t\t        </div>\r\n\t\t\t\t      </div>\r\n\t\t\t        <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\"\r\n\t\t\t         onClick = {(event) => this.onSubmitForm(event)}>Submit\r\n\t\t\t\t\t</button>\r\n\t\t\t\t    </form>\r\n\t  \t\t\t</div>\t\t\t\r\n\t    \t</div>\r\n\t    \t);\r\n    }\r\n}\r\n\r\nexport default NewInterview;"]},"metadata":{},"sourceType":"module"}