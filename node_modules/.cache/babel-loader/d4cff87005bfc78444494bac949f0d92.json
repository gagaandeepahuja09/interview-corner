{"ast":null,"code":"import _classCallCheck from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gagandeep/Documents/Projects/interview-corner/src/Components/UnivInterviews.js\";\nimport React, { Component } from 'react';\nimport { Route, NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport queryString from 'query-string';\nimport { List } from 'antd';\nvar interviews = null;\nvar filteredInterviews = null;\nvar collegeInterviews = null;\nvar selectedCollege = null;\n\nvar Interviews =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Interviews, _Component);\n\n  function Interviews() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Interviews);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Interviews)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      interviews: null,\n      filteredInterviews: null\n    };\n\n    _this.loadInterview = function (interview) {\n      /*const arr = Object.entries(interviews);\r\n      const univarr = Object.entries(interview);\r\n      */\n      console.log(interview);\n      console.log('f', _this.state.filteredInterviews);\n      var foundKey = null;\n      /*if(interviews && filteredInterviews) {\r\n      \tfoundKey = arr.find(key => Object.entries(key[1]) === univarr);\r\n      \tconsole.log(foundKey);\r\n      }\r\n      this.props.history.push({\r\n      \tpathname: '/interview-corner/univ-interviews/',\r\n      \tsearch: 'id' + '=' + encodeURIComponent(foundKey),\r\n      });*/\n    };\n\n    return _this;\n  }\n\n  _createClass(Interviews, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('https://interview-corner-1de29.firebaseio.com/updated-interviews.json').then(function (response) {\n        return _this2.setState({\n          interviews: response.data\n        });\n      });\n\n      if (interviews) {\n        this.setState({\n          filteredInterviews: filteredInterviews\n        });\n        console.log(this.state.filteredInterviews);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      collegeInterviews = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Loading...\");\n\n      if (this.state.interviews) {\n        var values = queryString.parse(this.props.location.search);\n        selectedCollege = values.college;\n        filteredInterviews = Object.values(this.state.interviews).filter(function (interview) {\n          return interview.college === selectedCollege;\n        });\n\n        if (filteredInterviews) {\n          collegeInterviews = Object.values(filteredInterviews).map(function (interview) {\n            return React.createElement(\"div\", {\n              key: interview,\n              onClick: function onClick() {\n                return _this3.loadInterview(interview);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 59\n              },\n              __self: this\n            }, React.createElement(NavLink, {\n              to: \"/interview-corner/univ-interview\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 59\n              },\n              __self: this\n            }, React.createElement(\"a\", {\n              href: \"#\",\n              className: \"list-group-item list-group-item-success notFull\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60\n              },\n              __self: this\n            }, React.createElement(\"h4\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61\n              },\n              __self: this\n            }, interview.name, \" Interview for \", interview.company))));\n            console.log('name', interview.name);\n          });\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, collegeInterviews);\n    }\n  }]);\n\n  return Interviews;\n}(Component);\n\nexport default Interviews;","map":{"version":3,"sources":["/home/gagandeep/Documents/Projects/interview-corner/src/Components/UnivInterviews.js"],"names":["React","Component","Route","NavLink","axios","queryString","List","interviews","filteredInterviews","collegeInterviews","selectedCollege","Interviews","state","loadInterview","interview","console","log","foundKey","get","then","response","setState","data","values","parse","props","location","search","college","Object","filter","map","name","company"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,OAAhB,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,IAAT,QAAqB,MAArB;AAEA,IAAIC,UAAU,GAAG,IAAjB;AACA,IAAKC,kBAAkB,GAAG,IAA1B;AACA,IAAIC,iBAAiB,GAAG,IAAxB;AACA,IAAIC,eAAe,GAAG,IAAtB;;IAEMC,U;;;;;;;;;;;;;;;;;UAELC,K,GAAQ;AACPL,MAAAA,UAAU,EAAE,IADL;AAEPC,MAAAA,kBAAkB,EAAE;AAFb,K;;UAKRK,a,GAAgB,UAACC,SAAD,EAAe;AAC9B;;;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiB,MAAKJ,KAAL,CAAWJ,kBAA5B;AACA,UAAIS,QAAQ,GAAG,IAAf;AACA;;;;;;;;AAQA,K;;;;;;;wCAEmB;AAAA;;AACnBb,MAAAA,KAAK,CAACc,GAAN,CAAU,uEAAV,EACAC,IADA,CACK,UAAAC,QAAQ;AAAA,eACZ,MAAI,CAACC,QAAL,CAAc;AAAEd,UAAAA,UAAU,EAAGa,QAAQ,CAACE;AAAxB,SAAd,CADY;AAAA,OADb;;AAGA,UAAGf,UAAH,EAAe;AACX,aAAKc,QAAL,CAAc;AAAEb,UAAAA,kBAAkB,EAAEA;AAAtB,SAAd;AACHO,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWJ,kBAAvB;AACA;AACD;;;6BAEQ;AAAA;;AACRC,MAAAA,iBAAiB,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAApB;;AACA,UAAG,KAAKG,KAAL,CAAWL,UAAd,EAA0B;AACzB,YAAMgB,MAAM,GAAGlB,WAAW,CAACmB,KAAZ,CAAkB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAAtC,CAAf;AACCjB,QAAAA,eAAe,GAAGa,MAAM,CAACK,OAAzB;AACApB,QAAAA,kBAAkB,GAAGqB,MAAM,CAACN,MAAP,CAAc,KAAKX,KAAL,CAAWL,UAAzB,EAAqCuB,MAArC,CACrB,UAAChB,SAAD,EAAe;AACd,iBAAOA,SAAS,CAACc,OAAV,KAAsBlB,eAA7B;AACA,SAHoB,CAArB;;AAKD,YAAGF,kBAAH,EAAuB;AACtBC,UAAAA,iBAAiB,GAAGoB,MAAM,CAACN,MAAP,CAAcf,kBAAd,EAAkCuB,GAAlC,CACnB,UAACjB,SAAD,EAAe;AACb,mBAAS;AAAK,cAAA,GAAG,EAAEA,SAAV;AAAqB,cAAA,OAAO,EAAE;AAAA,uBAAM,MAAI,CAACD,aAAL,CAAmBC,SAAnB,CAAN;AAAA,eAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAmE,oBAAC,OAAD;AAAS,cAAA,EAAE,EAAG,kCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAC3E;AAAG,cAAA,IAAI,EAAC,GAAR;AAAY,cAAA,SAAS,EAAC,iDAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAKA,SAAS,CAACkB,IAAf,qBAAoClB,SAAS,CAACmB,OAA9C,CADA,CAD2E,CAAnE,CAAT;AAGAlB,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,SAAS,CAACkB,IAA9B;AACD,WANkB,CAApB;AAQA;AACD;;AACE,aACF;AAAK,QAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEvB,iBADF,CADE;AAKH;;;;EA5DuBR,S;;AA+DzB,eAAeU,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Route, NavLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\nimport { List } from 'antd';\r\n\r\nlet interviews = null;\r\nlet  filteredInterviews = null;\r\nlet collegeInterviews = null;\r\nlet selectedCollege = null;\r\n\r\nclass Interviews extends Component {\r\n\r\n\tstate = {\r\n\t\tinterviews: null,\r\n\t\tfilteredInterviews: null,\r\n\t}\r\n\r\n\tloadInterview = (interview) => {\r\n\t\t/*const arr = Object.entries(interviews);\r\n\t\tconst univarr = Object.entries(interview);\r\n\t\t*/\r\n\t\tconsole.log(interview);\r\n\t\tconsole.log('f', this.state.filteredInterviews);\r\n\t\tlet foundKey = null;\r\n\t\t/*if(interviews && filteredInterviews) {\r\n\t\t\tfoundKey = arr.find(key => Object.entries(key[1]) === univarr);\r\n\t\t\tconsole.log(foundKey);\r\n\t\t}\r\n\t\tthis.props.history.push({\r\n\t\t\tpathname: '/interview-corner/univ-interviews/',\r\n\t\t\tsearch: 'id' + '=' + encodeURIComponent(foundKey),\r\n\t\t});*/\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\taxios.get('https://interview-corner-1de29.firebaseio.com/updated-interviews.json').\r\n\t\tthen(response => \r\n\t\t\tthis.setState({ interviews : response.data}) );\r\n\t\tif(interviews) {\r\n\t\t\t\t\t\tthis.setState({ filteredInterviews: filteredInterviews});\r\n\t\t\tconsole.log(this.state.filteredInterviews);\t\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\t\r\n\t\tcollegeInterviews = <div>Loading...</div>\r\n\t\tif(this.state.interviews) {\r\n\t\t\tconst values = queryString.parse(this.props.location.search);\r\n\t \t\tselectedCollege = values.college;\r\n\t \t\tfilteredInterviews = Object.values(this.state.interviews).filter(\r\n\t\t\t\t(interview) => {\r\n\t\t\t\t\treturn interview.college === selectedCollege;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tif(filteredInterviews) {\r\n\t\t\t\tcollegeInterviews = Object.values(filteredInterviews).map(\r\n\t\t\t\t\t(interview) => {\r\n\t\t\t\t\t\t\treturn ( <div key={interview} onClick={() => this.loadInterview(interview)}><NavLink to = \"/interview-corner/univ-interview\">\r\n\t\t\t\t\t\t\t\t<a href=\"#\" className=\"list-group-item list-group-item-success notFull\">\r\n\t\t\t\t\t\t\t\t<h4>{interview.name} Interview for {interview.company}</h4></a></NavLink></div>)\r\n\t\t\t\t\t\t\tconsole.log('name', interview.name); \r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t    return (\r\n\t\t\t<div className = \"list-group\">\r\n\t\t\t\t{collegeInterviews}\r\n\t\t\t</div>\r\n    \t);\r\n\t}\r\n}\r\n\r\nexport default Interviews;"]},"metadata":{},"sourceType":"module"}