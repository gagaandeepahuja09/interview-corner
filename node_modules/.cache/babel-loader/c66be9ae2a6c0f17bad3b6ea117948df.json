{"ast":null,"code":"import _toConsumableArray from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/gagandeep/Documents/Projects/interview-corner/src/Components/Aptitude.js\";\nimport React, { Component } from 'react';\nimport { Radio, Card, Button, Icon } from 'antd';\nimport { questions } from '../Data/aptitude';\nimport _ from 'lodash';\nvar RadioGroup = Radio.Group;\nvar icon = null;\nvar disp = null;\nvar questionChoices = questions;\nvar tickStyle = {\n  'padding': '10px 25px',\n  'fontSize': '20px'\n};\n\nvar Quiz =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Quiz, _Component);\n\n  function Quiz() {\n    var _this;\n\n    _classCallCheck(this, Quiz);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Quiz).call(this));\n\n    _this.handleSubmit = function () {\n      _this.setState({\n        enableAnswers: true\n      });\n\n      var score = 0;\n\n      for (var i = 0; i < 25; i++) {\n        if (_this.state.givenAns[i] === _this.state.actualAns[i]) {\n          score = score + 10;\n        }\n      }\n    };\n\n    _this.onInput = function (e) {\n      var id = e.target.name;\n      var ans = e.target.value;\n      var newAns = _this.state.givenAns;\n      var actualAns = _this.state.actualAns;\n      newAns[id - 1] = ans;\n\n      _this.setState({\n        givenAns: newAns\n      });\n\n      console.log(_this.state.givenAns);\n      var answer = {\n        id: id,\n        answer: e.target.value\n      };\n      var answers;\n\n      if (_this.state.answers.some(function (answer) {\n        return answer.id === id;\n      })) {\n        answers = _toConsumableArray(_this.state.answers.filter(function (answer) {\n          return answer.id !== id;\n        })).concat([answer]);\n      } else {\n        answers = _toConsumableArray(_this.state.answers).concat([answer]);\n      }\n\n      _this.setState({\n        answers: answers\n      }, function () {\n        return console.log(_this.state.answers);\n      });\n    };\n\n    _this.state = {\n      answers: [],\n      givenAns: [],\n      actualAns: [],\n      enableAnswers: false,\n      score: 0\n    };\n    _this.onInput = _this.onInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.buildRadioButtons = _this.buildRadioButtons.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Quiz, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var selAns = _.range(25).map(function () {\n        return -1;\n      });\n\n      this.setState({\n        givenAns: selAns,\n        actualAns: selAns\n      });\n      var actualAns = selAns;\n      var k = 0;\n      questionChoices.forEach(function (obj) {\n        selAns[k] = obj.answer;\n        k++;\n      });\n      this.setState({\n        selAns: selAns\n      });\n      console.log(this.state.selAns);\n    }\n  }, {\n    key: \"buildRadioButtons\",\n    value: function buildRadioButtons(arr, type, id, ans) {\n      var _this2 = this;\n\n      disp = arr.map(function (choice, i) {\n        if (_this2.state.enableAnswers) {\n          if (ans === choice) {\n            console.log(\"Hello\");\n            icon = React.createElement(Icon, {\n              type: \"check-circle\",\n              theme: \"twoTone\",\n              twoToneColor: \"#52c41a\",\n              style: tickStyle,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 78\n              },\n              __self: this\n            });\n          } else {\n            icon = null;\n          }\n        }\n\n        return React.createElement(\"div\", {\n          key: i,\n          value: choice,\n          className: \"righter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"radio\",\n          className: \"custom-control-input\",\n          name: id,\n          id: choice,\n          value: choice,\n          onChange: _this2.onInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          for: choice,\n          onChange: _this2.onInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, choice), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, icon));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.enableAnswers) {\n        icon = React.createElement(Icon, {\n          type: \"check-circle\",\n          theme: \"twoTone\",\n          twoToneColor: \"#52c41a\",\n          style: tickStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        });\n      }\n\n      var iterator = questionChoices.map(function (question, i) {\n        var choices = question.choices,\n            questionType = question.questionType,\n            questionID = question.questionID,\n            questionText = question.questionText,\n            answer = question.answer;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, questionID, \". \", questionText), _this3.buildRadioButtons(choices, questionType, questionID, answer), disp)), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form alignLeft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, iterator)), React.createElement(Button, {\n        type: \"primary\",\n        size: \"large\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Submit Test\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Quiz;\n}(Component);\n\nexport default Quiz;","map":{"version":3,"sources":["/home/gagandeep/Documents/Projects/interview-corner/src/Components/Aptitude.js"],"names":["React","Component","Radio","Card","Button","Icon","questions","_","RadioGroup","Group","icon","disp","questionChoices","tickStyle","Quiz","handleSubmit","setState","enableAnswers","score","i","state","givenAns","actualAns","onInput","e","id","target","name","ans","value","newAns","console","log","answer","answers","some","filter","bind","buildRadioButtons","selAns","range","map","k","forEach","obj","arr","type","choice","iterator","question","choices","questionType","questionID","questionText"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Radio, Card, Button, Icon } from 'antd';\nimport  { questions } from '../Data/aptitude';\nimport _ from 'lodash';\n\nconst RadioGroup = Radio.Group;\nlet icon = null;\nlet disp = null;\n\nconst questionChoices = questions;\n\nconst tickStyle = {\n  'padding': '10px 25px',\n  'fontSize': '20px',\n};\n\nclass Quiz extends Component {\n\tconstructor() {\n    super();\n    this.state = { answers: [], \n      givenAns: [],\n      actualAns: [],\n      enableAnswers: false,\n      score: 0,\n       };\n    this.onInput = this.onInput.bind(this);\n    this.buildRadioButtons = this.buildRadioButtons.bind(this);\n  }\n\n  componentWillMount() {\n    const selAns = _.range(25).map(function () { return -1 });\n    this.setState({ givenAns: selAns, actualAns: selAns });\n    let actualAns = selAns;\n    let k = 0;\n\n    questionChoices.forEach((obj) => {\n      selAns[k] = obj.answer;\n      k++;\n    });\n    this.setState({ selAns });\n    console.log(this.state.selAns);\n  }\n\n  handleSubmit = () => {\n    this.setState({ enableAnswers: true });\n    let score = 0;\n    for(let i=0; i<25; i++) {\n      if(this.state.givenAns[i] === this.state.actualAns[i]) {\n        score = score + 10;\n      } \n    }\n  }\n\n  onInput = (e) => {\n    const id = e.target.name;\n    const ans = e.target.value;\n    const newAns = this.state.givenAns;\n    const actualAns = this.state.actualAns;\n    newAns[id-1] = ans;\n    this.setState({ givenAns: newAns });\n\n    console.log(this.state.givenAns);\n    const answer = { id, answer: e.target.value };\n    let answers;\n    if (this.state.answers.some(answer => answer.id === id)) {\n      answers = [...this.state.answers.filter(answer => answer.id !== id), answer];\n    } else {\n      answers = [...this.state.answers, answer];\n    }\n    this.setState({ answers }, () => console.log(this.state.answers));\n  }\n\n  buildRadioButtons(arr, type, id, ans) {\n    disp = arr.map((choice, i) => {\n      if(this.state.enableAnswers) {\n        if(ans === choice) {\n          console.log(\"Hello\");\n          icon = <Icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" style = {tickStyle} />\n        }\n        else {\n          icon = null;\n        }\n      }\n      return (\n        <div key={i} value={choice} className = \"righter\">\n            <input\n            type=\"radio\"\n            className=\"custom-control-input\"\n            name={id}\n            id={choice}\n            value={choice}\n            onChange={this.onInput}\n          />        \n          <label for = {choice} onChange={this.onInput}>{choice}</label>\n          <span>{icon}</span>\n        </div>\n        );  \n      });\n    }\n\n  render() {\n    if(this.state.enableAnswers) {\n      icon = <Icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" style = {tickStyle} />\n    }\n    var iterator = questionChoices.map((question, i) => {\n      const { choices, questionType, questionID, questionText, answer } = question;\n      return (\n      \t<div>\n      \t\t<Card>\n\t        \t<div key={i}>\n\t          \t<h3>{questionID}. {questionText}</h3>\n\t          \t{this.buildRadioButtons(choices, questionType, questionID, answer)}\n              {disp}\n\t        \t</div>\n\t        </Card>\n\t        <br/>\n\t    </div>    \n      );\n    });\n    return (\n        <div>\n          <div className=\"form alignLeft\">\n            <div className=\"h3\">\n              {iterator}\n            </div>\n          </div>\n          <Button type=\"primary\" size=\"large\" onClick = {this.handleSubmit}>Submit Test</Button> <br/> <br/>\n        </div>\n    );\n  }\n}\n\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}