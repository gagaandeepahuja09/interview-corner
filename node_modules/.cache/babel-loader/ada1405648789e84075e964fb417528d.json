{"ast":null,"code":"import _classCallCheck from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gagandeep/Documents/Projects/interview-corner/src/Components/Quiz.js\";\nimport React, { Component } from 'react';\nimport { Radio, Card } from 'antd';\nimport { data } from '../Data/data';\nimport _ from 'lodash';\nvar RadioGroup = Radio.Group;\n\nvar Quiz =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Quiz, _Component);\n\n  function Quiz() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Quiz);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Quiz)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: null\n    };\n    return _this;\n  }\n\n  _createClass(Quiz, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var shuffledQues = _.shuffle(data);\n\n      this.setState({\n        data: shuffledQues.splice(0, 3)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('data', this.state.data);\n      var displayData = null;\n\n      if (this.state.data) {\n        displayData = this.state.data.map(function (element) {\n          return React.createElement(Card, {\n            className: \"notFull\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, element[0]), React.createElement(RadioGroup, {\n            onChange: _this2.onChange,\n            value: _this2.state.value,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }, React.createElement(Radio, {\n            value: 1,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, element[1]), React.createElement(Radio, {\n            value: 2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, element[2]), React.createElement(Radio, {\n            value: 3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, element[3]), React.createElement(Radio, {\n            value: 4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, element[4])));\n        });\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, displayData);\n      }\n    }\n  }]);\n\n  return Quiz;\n}(Component);\n\nexport default Quiz;","map":{"version":3,"sources":["/home/gagandeep/Documents/Projects/interview-corner/src/Components/Quiz.js"],"names":["React","Component","Radio","Card","data","_","RadioGroup","Group","Quiz","state","shuffledQues","shuffle","setState","splice","console","log","displayData","map","element","onChange","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,MAA5B;AACA,SAAUC,IAAV,QAAsB,cAAtB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,IAAMC,UAAU,GAAGJ,KAAK,CAACK,KAAzB;;IAEMC,I;;;;;;;;;;;;;;;;;UACLC,K,GAAQ;AACPL,MAAAA,IAAI,EAAE;AADC,K;;;;;;yCAIa;AACpB,UAAIM,YAAY,GAAGL,CAAC,CAACM,OAAF,CAAUP,IAAV,CAAnB;;AACA,WAAKQ,QAAL,CAAc;AAAER,QAAAA,IAAI,EAAEM,YAAY,CAACG,MAAb,CAAoB,CAApB,EAAuB,CAAvB;AAAR,OAAd;AACA;;;6BAEQ;AAAA;;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKN,KAAL,CAAWL,IAA/B;AACA,UAAIY,WAAW,GAAG,IAAlB;;AACA,UAAG,KAAKP,KAAL,CAAWL,IAAd,EAAoB;AACnBY,QAAAA,WAAW,GAAG,KAAKP,KAAL,CAAWL,IAAX,CAAgBa,GAAhB,CAAoB,UAAAC,OAAO,EAAI;AAC5C,iBACC,oBAAC,IAAD;AAAM,YAAA,SAAS,EAAG,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIA,OAAO,CAAC,CAAD,CAAX,CADD,EAEC,oBAAC,UAAD;AAAY,YAAA,QAAQ,EAAE,MAAI,CAACC,QAA3B;AAAqC,YAAA,KAAK,EAAE,MAAI,CAACV,KAAL,CAAWW,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACO,oBAAC,KAAD;AAAO,YAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAkBF,OAAO,CAAC,CAAD,CAAzB,CADP,EAEO,oBAAC,KAAD;AAAO,YAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAkBA,OAAO,CAAC,CAAD,CAAzB,CAFP,EAGO,oBAAC,KAAD;AAAO,YAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAkBA,OAAO,CAAC,CAAD,CAAzB,CAHP,EAII,oBAAC,KAAD;AAAO,YAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAkBA,OAAO,CAAC,CAAD,CAAzB,CAJJ,CAFD,CADD;AAWA,SAZa,CAAd;AAaA,eACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMF,WAAN,CADV;AAGG;AACJ;;;;EA/BiBf,S;;AAkCnB,eAAeO,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Radio, Card } from 'antd';\nimport  { data } from '../Data/data';\nimport _ from 'lodash';\n\nconst RadioGroup = Radio.Group;\n\nclass Quiz extends Component {\n\tstate = {\n\t\tdata: null,\n\t}\n\n\tcomponentWillMount() {\n\t\tlet shuffledQues = _.shuffle(data);\t\n\t\tthis.setState({ data: shuffledQues.splice(0, 3) });\n\t}\n\n\trender() {\t\n\t\tconsole.log('data', this.state.data);\n\t\tlet displayData = null;\n\t\tif(this.state.data) {\n\t\t\tdisplayData = this.state.data.map(element => {\n\t\t\t\treturn (\n\t\t\t\t\t<Card className = \"notFull\">\n\t\t\t\t\t\t<p>{element[0]}</p>\n\t\t\t\t\t\t<RadioGroup onChange={this.onChange} value={this.state.value}>\n\t\t\t\t\t        <Radio value={1}>{element[1]}</Radio>\n\t\t\t\t\t        <Radio value={2}>{element[2]}</Radio>\n\t\t\t\t\t        <Radio value={3}>{element[3]}</Radio>\n\t\t\t\t\t    \t<Radio value={4}>{element[4]}</Radio>\n\t\t\t\t\t    </RadioGroup>\n\t\t\t\t\t</Card>\n\t\t\t\t)    \n\t\t\t});\n\t\t\treturn (\n\t            <div>{displayData}</div>\n\t        );\n    \t}\n\t}\n}\n\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}