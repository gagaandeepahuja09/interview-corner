{"ast":null,"code":"import _classCallCheck from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gagandeep/Documents/Projects/interview-corner/src/Components/CompanySearch.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Card, Button } from 'antd';\nimport Images from '../Data/Images';\nvar companies = null;\nvar unique = null;\nvar companyDisplay = null;\nvar gridStyle = {\n  textAlign: 'center',\n  cursor: 'pointer'\n};\n\nvar CompanySearch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CompanySearch, _Component);\n\n  function CompanySearch() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CompanySearch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CompanySearch)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      interviews: null\n    };\n\n    _this.loadInterviews = function (company) {\n      _this.props.history.push({\n        pathname: '/interview-corner/company-interviews/',\n        search: 'company' + '=' + encodeURIComponent(company)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CompanySearch, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      axios.get('https://interview-corner-1de29.firebaseio.com/updated-interviews.json').then(function (response) {\n        _this2.setState({\n          interviews: response.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.interviews) {\n        companies = Object.values(this.state.interviews).map(function (interview) {\n          return interview.company;\n        });\n      }\n\n      if (companies) {\n        unique = companies.filter(function (value, index, self) {\n          return self.indexOf(value) === index;\n        });\n        console.log(unique);\n      }\n\n      if (unique) {\n        companyDisplay = unique.map(function (comp) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col-12 col-md-6 order-1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"row-md-12\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card thumbnail\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            className: \"card-img-top img-responsive img-rounded\",\n            src: Images[comp],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"card-body\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            className: \"card-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, \"Card Title\"), React.createElement(\"p\", {\n            className: \"card-text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, \"on the card title bulk of the card's content.\"), React.createElement(\"button\", {\n            onClick: function onClick() {\n              return _this3.loadInterviews(comp);\n            },\n            className: \"btn btn-warning\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, \"View Interviews\"))))));\n        });\n      }\n\n      console.log(companies);\n      return React.createElement(\"div\", {\n        className: \"card-columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Companies\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, companyDisplay));\n    }\n  }]);\n\n  return CompanySearch;\n}(Component);\n\nexport default CompanySearch;","map":{"version":3,"sources":["/home/gagandeep/Documents/Projects/interview-corner/src/Components/CompanySearch.js"],"names":["React","Component","axios","Card","Button","Images","companies","unique","companyDisplay","gridStyle","textAlign","cursor","CompanySearch","state","interviews","loadInterviews","company","props","history","push","pathname","search","encodeURIComponent","get","then","response","setState","data","Object","values","map","interview","filter","value","index","self","indexOf","console","log","comp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Card, Button } from 'antd';\nimport Images  from '../Data/Images';\n\nlet companies = null;\nlet unique = null;\nlet companyDisplay = null;\n\nconst gridStyle = {\n  textAlign: 'center',\n  cursor: 'pointer'\n};\n\nclass CompanySearch extends Component {\n\n\tstate = {\n\t\tinterviews: null,\n\t}\n\n\tloadInterviews = (company) => {\n\t\tthis.props.history.push({\n\t\t\tpathname: '/interview-corner/company-interviews/',\n\t\t\tsearch: 'company' + '=' + encodeURIComponent(company),\n\t\t})\n\t}\n\n\tcomponentWillMount() {\n\t\taxios.get('https://interview-corner-1de29.firebaseio.com/updated-interviews.json')\n\t\t.then(response => {\n\t\t\tthis.setState({\tinterviews: response.data  });\n\t\t});\n\t}\n\n\trender() {\n\t\tif(this.state.interviews) {\n\t\t\tcompanies = Object.values(this.state.interviews).map((interview) => {\n\t\t\t\treturn interview.company;\n\t\t\t});\n\t\t}\n\t\tif(companies) {\n\t\t\tunique = companies.filter((value, index, self) => { \n    \t\t\treturn self.indexOf(value) === index;\n\t\t\t});\n\t\t\tconsole.log(unique);\n\t\t}\n\t\tif(unique) {\n\t\t\tcompanyDisplay = unique.map(\n\t\t\t\t(comp) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div className=\"col-12 col-md-6 order-1\">\n\t\t\t\t\t\t\t\t<div className=\"row-md-12\">\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div className=\"card thumbnail\">\n\t\t\t\t\t\t\t  \t\t\t<img className=\"card-img-top img-responsive img-rounded\" src={Images[comp]} />\n\t\t\t\t\t\t\t  \t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t    \t\t\t<h5 className=\"card-title\">Card Title</h5>\n\t\t\t\t\t\t\t    \t\t\t<p className=\"card-text\">on the card title bulk of the card's content.</p>\n\t\t\t\t\t\t\t    \t\t\t<button onClick = { () => this.loadInterviews(comp) } className=\"btn btn-warning\" >View Interviews</button>\n\t\t\t\t\t\t\t  \t\t\t</div>\n\t\t\t\t\t\t\t  \t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\t\t\n\t\t\t\t);\n\t\t\t\t});\n\t\t}\n\t\tconsole.log(companies);\n\t\treturn (\n\t\t\t\t<div className = \"card-columns\">\n\t\t\t\t\t<Card title = \"Companies\">\n\t\t\t\t\t\t{companyDisplay}\n\t\t\t\t\t</Card>\t\n\t\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nexport default CompanySearch;"]},"metadata":{},"sourceType":"module"}