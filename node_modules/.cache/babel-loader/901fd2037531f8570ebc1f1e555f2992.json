{"ast":null,"code":"import _toConsumableArray from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/gagandeep/Documents/Projects/interview-corner/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/gagandeep/Documents/Projects/interview-corner/src/Components/Aptitude.js\";\nimport React, { Component } from 'react';\nimport { Radio, Card, Button } from 'antd';\nimport { questions } from '../Data/aptitude';\nimport _ from 'lodash';\nvar RadioGroup = Radio.Group;\nvar questionChoices = questions;\n\nvar Quiz =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Quiz, _Component);\n\n  function Quiz() {\n    var _this;\n\n    _classCallCheck(this, Quiz);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Quiz).call(this));\n    _this.state = {\n      answers: []\n    };\n    _this.onInput = _this.onInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.buildRadioButtons = _this.buildRadioButtons.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Quiz, [{\n    key: \"onInput\",\n    value: function onInput(e) {\n      var _this2 = this;\n\n      var id = e.target.name;\n      var answer = {\n        id: id,\n        answer: e.target.value\n      };\n      var answers;\n\n      if (this.state.answers.some(function (answer) {\n        return answer.id === id;\n      })) {\n        answers = _toConsumableArray(this.state.answers.filter(function (answer) {\n          return answer.id !== id;\n        })).concat([answer]);\n      } else {\n        answers = _toConsumableArray(this.state.answers).concat([answer]);\n      }\n\n      this.setState({\n        answers: answers\n      }, function () {\n        return console.log(_this2.state.answers);\n      });\n    }\n  }, {\n    key: \"buildRadioButtons\",\n    value: function buildRadioButtons(arr, type, id) {\n      var _this3 = this;\n\n      return arr.map(function (choice, i) {\n        return React.createElement(\"div\", {\n          key: i,\n          value: choice,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"radio\",\n          className: \"custom-control-input\",\n          name: id,\n          value: choice,\n          onChange: _this3.onInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, choice));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var iterator = questionChoices.map(function (question, i) {\n        var choices = question.choices,\n            questionType = question.questionType,\n            questionID = question.questionID,\n            questionText = question.questionText;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, questionID, \". \", questionText), _this4.buildRadioButtons(choices, questionType, questionID))), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form alignLeft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, iterator)), React.createElement(Button, {\n        type: \"primary\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Submit\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Quiz;\n}(Component);\n\nexport default Quiz;","map":{"version":3,"sources":["/home/gagandeep/Documents/Projects/interview-corner/src/Components/Aptitude.js"],"names":["React","Component","Radio","Card","Button","questions","_","RadioGroup","Group","questionChoices","Quiz","state","answers","onInput","bind","buildRadioButtons","e","id","target","name","answer","value","some","filter","setState","console","log","arr","type","map","choice","i","iterator","question","choices","questionType","questionID","questionText"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Radio, Card, Button } from 'antd';\nimport  { questions } from '../Data/aptitude';\nimport _ from 'lodash';\n\nconst RadioGroup = Radio.Group;\n\nconst questionChoices = questions;\n\nclass Quiz extends Component {\n\tconstructor() {\n    super();\n    this.state = { answers: [] };\n    this.onInput = this.onInput.bind(this);\n    this.buildRadioButtons = this.buildRadioButtons.bind(this);\n  }\n\n  onInput(e) {\n    const id = e.target.name;\n    const answer = { id, answer: e.target.value };\n    let answers;\n    if (this.state.answers.some(answer => answer.id === id)) {\n      answers = [...this.state.answers.filter(answer => answer.id !== id), answer];\n    } else {\n      answers = [...this.state.answers, answer];\n    }\n    this.setState({ answers }, () => console.log(this.state.answers));\n  }\n\n  buildRadioButtons(arr, type, id) {\n    return arr.map((choice, i) => {\n      return (\n        <div key={i} value={choice}>\n          <input\n          type=\"radio\"\n          className=\"custom-control-input\"\n          name={id}\n          value={choice}\n          onChange={this.onInput}\n        />          \n        <label>{choice}</label>\n      </div>\n     )\n  })\n }\n\n  render() {\n    var iterator = questionChoices.map((question, i) => {\n      const { choices, questionType, questionID, questionText } = question;\n      return (\n      \t<div>\n      \t\t<Card>\n\t        \t<div key={i}>\n\t          \t<h3>{questionID}. {questionText}</h3>\n\t          \t{this.buildRadioButtons(choices, questionType, questionID)}\n\t        \t</div>\n\t        </Card>\n\t        <br/>\n\t    </div>    \n      );\n    });\n    return (\n        <div>\n          <div className=\"form alignLeft\">\n            <div className=\"h3\">\n              {iterator}\n            </div>\n          </div>\n          <Button type=\"primary\" size=\"large\">Submit</Button> <br/> <br/>\n        </div>\n    );\n  }\n}\n\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}